"""
@author: Katherine Eaton

plague-phylogeography snakemake pipeline.

snakemake --cores 1 --configfile config/snakemake.yaml

"""

# -----------------------------------------------------------------------------#
#                             Modules and Packages                             #
# -----------------------------------------------------------------------------#
import os # Path manipulation

from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
FTP = FTPRemoteProvider()

# -----------------------------------------------------------------------------#
#                                 Setup                                        #
# -----------------------------------------------------------------------------#

project_dir = os.path.dirname(workflow.basedir)
results_dir = os.path.join(project_dir, "results")
scripts_dir = os.path.join(project_dir, "workflow", "scripts")
envs_dir = os.path.join(project_dir, "workflow", "envs")
logs_dir = os.path.join(project_dir, "workflow", "logs")
report_dir = os.path.join(project_dir, "workflow", "report")

# Include the config file
configfile: os.path.join(project_dir, "config", "snakemake.yaml")

# Sub snakefiles
include: "rules/sqlite_import.smk"
include: "rules/download.smk"
include: "rules/snippy.smk"
include: "rules/phylogeny.smk"
include: "rules/functions.smk"

# Report file
report: "report/workflow.rst"

# -----------------------------------------------------------------------------#
#                                Main Target                                   #
# -----------------------------------------------------------------------------#

rule all:
    input:
        "results/iqtree/iqtree.treefile"

# -----------------------------------------------------------------------------#
#                             Help and Usage                                   #
# -----------------------------------------------------------------------------#

rule help:
  """
  Print list of all targets with help.
  """
  run:
    for rule in workflow.rules:
      print("rule: ", rule.name )
      print(rule.docstring )
      if rule._input: print("input: ", rule._input)
      if rule._output: print("output: ", rule._output)
      if rule._params: print("params: ", rule._params)
      print("")
