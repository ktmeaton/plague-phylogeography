#------------------------------------------------------------------------------#
name: Pipeline CI
#------------------------------------------------------------------------------#
# Global workflow environment variables
env:
    TEST_DOWNLOAD: "test_download_reference test_download_assembly test_download_sra test_download_gff test_download_gbff"
    TEST_EAGER: "test_eager_local test_eager_sra"
    TEST_SNIPPY: "test_snippy_pairwise_assembly test_snippy_pairwise_sra test_snippy_pairwise_local"
    TEST_SNIPPY_MULTI: "test_snippy_multi test_snippy_multi_filter"
    TEST_PHYLOGENY: "test_iqtree"
    TEST_QC: "test_multiqc"

#------------------------------------------------------------------------------#
# Workflow conditions
on:
  push:
    branches:
      - '*'
    paths:
      - '.github/workflows/pipeline.yaml'
      - 'workflow/Snakefile'
      - 'workflow/rules/*.smk'
      - 'workflow/envs/*/*.yaml'
      - 'workflow/envs/*/Dockerfile'
      - 'workflow/scripts/*'
      - 'results/sqlite_db/*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
#------------------------------------------------------------------------------#
jobs:
  #----------------------------------------------------------------------------#
  # Conda Pipeline
  pipeline_conda:
    name: Pipeline with Conda
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 120
    steps:
      #------------------------------------------------------------------------#
      # Env setup
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
      #------------------------------------------------------------------------#
      # Checkout Repository
      - name: checkout repo
        uses: actions/checkout@v2
      #------------------------------------------------------------------------#
      # Setup conda with mamba
      - name: setup conda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge
      # Install conda environment
      - name: create conda env
        run: mamba env create -f workflow/envs/merge/environment.yaml;
      #------------------------------------------------------------------------#
      # Test Data Download
      - name: test download
        shell: bash -l {0}
        run: |
            conda activate plague-phylogeography;
            snakemake --profile profiles/gh-actions ${TEST_DOWNLOAD};
      # Test eager
      - name: test nf-core/eager
        shell: bash -l {0}
        run: |
            conda activate plague-phylogeography;
            snakemake --profile profiles/gh-actions ${TEST_EAGER};
  #----------------------------------------------------------------------------#
  pipeline_singularity:
    name: Pipeline with Singularity
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      #------------------------------------------------------------------------#
      - name: setup environment variables
        run: |
          echo "SINGULARITY_DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "SINGULARITY_DOCKER_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}" >> $GITHUB_ENV
      #------------------------------------------------------------------------#
      # Checkout Repository
      - name: checkout repo
        uses: actions/checkout@v2
      #------------------------------------------------------------------------#
      # Setup singularity
      - name: setup singularity
        uses: eWaterCycle/setup-singularity@v3
        with:
          singularity-version: 3.6.3
      #------------------------------------------------------------------------#
      # pull container
      - name: pull container
        run: singularity pull docker://docker.io/ktmeaton/plague-phylogeography:dev
      #------------------------------------------------------------------------#
      # Configure sra-toolkit
      - name: configure sra-toolkit
        run: |
          mkdir -p ~/.ncbi/;
          printf '/LIBS/GUID = "%s"\n' `uuidgen` > ~/.ncbi/user-settings.mkfg;
      # test download
      - name: test download
        run: |
          singularity exec plague-phylogeography_dev.sif snakemake --profile profiles/gh-actions ${TEST_DOWNLOAD};
      # test eager
      #- name: test nf-core/eager
      #  run: |
      #    singularity exec plague-phylogeography_dev.sif snakemake --profile profiles/gh-actions ${TEST_EAGER};
