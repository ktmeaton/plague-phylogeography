#------------------------------------------------------------------------------#
name: Pipeline
#------------------------------------------------------------------------------#
# Global workflow environment variables
env:
    CONDA_ENVS_PATH: "/home/runner/miniconda/envs:/usr/share/miniconda/envs"
    CONDA_PKGS_DIRS: "/home/runner/miniconda/pkgs"
    TEST_DOWNLOAD: "test_download_reference test_download_assembly test_download_sra test_download_gff test_download_gbff"
    TEST_EAGER: "test_eager_local test_eager_sra"
    TEST_SNIPPY: "test_snippy_pairwise_assembly test_snippy_pairwise_sra test_snippy_pairwise_local"
    TEST_SNIPPY_MULTI: "test_snippy_multi test_snippy_multi_filter"
    TEST_PHYLOGENY: "test_iqtree"
    TEST_QC: "test_multiqc"
#------------------------------------------------------------------------------#
# Workflow conditions
on:
  push:
    branches:
      - '*'
    paths:
      - '.github/workflows/pipeline.yaml'
      - 'workflow/Snakefile'
      - 'workflow/rules/*.smk'
      - 'workflow/envs/*/*.yaml'
      - 'workflow/envs/*/Dockerfile'
      - 'workflow/scripts/*'
      - 'results/sqlite_db/*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
#------------------------------------------------------------------------------#
jobs:
  #----------------------------------------------------------------------------#
  # Install dependencies
  pipeline :
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container_mode: ["--use-conda","--use-singularity --singularity-prefix /home/runner/work/plague-phylogeography/plague-phylogeography/.snakemake/singularity/"]
      # Don't cancel a matrix job if another job fails
      fail-fast: false
    timeout-minutes: 60
    steps:
      #------------------------------------------------------------------------#
      # Timezone setup
      - name: Setup timezone
        uses: zcong1993/setup-timezone@master
        with:
          timezone: America/New_York
      #------------------------------------------------------------------------#
      # Checkout Repository
      - name: checkout repo
        uses: actions/checkout@v2
      # Install nextflow
      - name: install nextflow
        run: |
          wget https://github.com/nextflow-io/nextflow/releases/download/v20.04.1/nextflow
          bash nextflow
          chmod +x nextflow
          sudo mv nextflow /usr/local/bin/
          nextflow -v
      #------------------------------------------------------------------------#
      # Setup conda with mamba
      - name: setup conda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge
      #------------------------------------------------------------------------#
      #  Restore (cache) conda environments
      - name: cache default env
        id: cache-default
        uses: actions/cache@v2
        with:
          path: /home/runner/miniconda/envs/plague-phylogeography-default
          key: snakemake-default-env-${{ hashFiles('workflow/envs/default/default.yaml') }}
      # Cache workflow environments
      #- name: cache workflow envs
      #  uses: actions/cache@v2
      #  with:
      #    path: /home/runner/work/plague-phylogeography/plague-phylogeography/.snakemake/conda
      #    key: snakemake-workflow-envs-${{ runner.os }}-${{ hashFiles('workflow/envs/*/*.yaml') }}
      # Check conda environments
      - name: check cache
        run: |
          conda info --envs
      # Create environment (if not cached)
      - name: create default environment
        if: steps.cache-default.outputs.cache-hit != 'true'
        shell: bash -l {0}
        run:
          mamba env create -f workflow/envs/default/default.yaml;
      # Set up .env file with secrets
      - name: create env file
        run:
          echo "export SLACK_TOKEN=${{ secrets.SLACK_GH_ACTIONS }}" > .env
      #------------------------------------------------------------------------#
      # Test Data Download
      - name: test download
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_DOWNLOAD};
          conda deactivate
      # Test Eager
      - name: test eager
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_EAGER};
          conda deactivate
      # Test snippy
      - name: test snippy pairwise
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_SNIPPY};
          conda deactivate
      # Test snippy
      - name: test merge snp density
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions merge_snp_density;
          conda deactivate
      # Test snippy multi
      - name: test snippy multi
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_SNIPPY_MULTI};
          conda deactivate
      # Test IQTREE
      - name: test iqtree
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_PHYLOGENY};
          conda deactivate
      # Test IQTREE
      - name: test multiqc
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions ${TEST_QC};
          conda deactivate
      # Test wrapup with all
      - name: test all
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions all;
          conda deactivate
      # Test Report Generation
      - name: test report
        shell: bash -l {0}
        run:
          conda activate plague-phylogeography-default;
          snakemake ${{ matrix.container_mode }} --profile profiles/gh-actions --report workflow/report/report.html all;
          conda deactivate
      #------------------------------------------------------------------------#
      #  Artifact Upload Report
      - name: artifact report
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: workflow/report/report.html
      #  Artifact Upload logs
      - name: artifact logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: workflow/logs/
