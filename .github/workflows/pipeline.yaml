#------------------------------------------------------------------------------#
name: Pipeline CI
#------------------------------------------------------------------------------#
# Workflow conditions
on:
  push:
    branches:
      - master
      - dev
    paths:
      - '.github/workflows/pipeline.yaml'
      - 'project/test/config/snakemake.yaml'
      - 'workflow/Snakefile'
      - 'workflow/rules/*.smk'
      - 'workflow/envs/*/*.yaml'
      - 'workflow/envs/*/Dockerfile'
      - 'workflow/scripts/*'
      - 'results/sqlite_db/*'
      - 'profiles/gh-actions/config.yaml'
      - 'workflow/notebooks/*.ipynb'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
#------------------------------------------------------------------------------#
jobs:
  #----------------------------------------------------------------------------#
  # Conda Pipeline
  pipeline_conda:
    name: Pipeline with Conda
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 60
    steps:
      #------------------------------------------------------------------------#
      # Env setup
      - name: setup environment variables
        run: |
          echo "CONDA_ENVS_PATH=/home/runner/miniconda/envs:/usr/share/miniconda/envs" >> $GITHUB_ENV
          echo "CONDA_PKGS_DIRS=/home/runner/miniconda/pkgs" >> $GITHUB_ENV
          echo "FLOWDASH_BIO_USERNAME=${{ secrets.FLOWDASH_BIO_USERNAME }}" >> $GITHUB_ENV
          echo "FLOWDASH_BIO_PASSWORD=${{ secrets.FLOWDASH_BIO_PASSWORD }}" >> $GITHUB_ENV
      #------------------------------------------------------------------------#
      # Checkout Repository
      - name: checkout repo
        uses: actions/checkout@v2
      # Clean results
      - name: clean results
        run: |
          rm -rf results/iqtree/ results/metadata results/multiqc;
      #------------------------------------------------------------------------#
      # Setup conda with mamba
      - name: setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          mamba-version: "*"
          channels: conda-forge
      # Install conda environment
      - name: create conda env
        run: mamba env create -f workflow/envs/merge/environment.yaml;
      #------------------------------------------------------------------------#
      # Clean Old Results
      - name: clean results
        shell: bash -l {0}
        run: workflow/scripts/clean_results.sh results yes

      # Test Data Download
      - name: run help
        shell: bash -l {0}
        run: |
            conda activate plague-phylogeography;
            snakemake --profile profiles/gh-actions help;
      # run all
      - name: run all
        shell: bash -l {0}
        run: |
            conda activate plague-phylogeography;
            snakemake --profile profiles/gh-actions all;
      # run report
      - name: run report
        shell: bash -l {0}
        run: |
            conda activate plague-phylogeography;
            snakemake --profile profiles/gh-actions --report workflow/report/report.html all;
      #------------------------------------------------------------------------#
      #  Artifact Upload
      - name: artifact conda-report
        uses: actions/upload-artifact@v2
        with:
          name: conda-report
          path: workflow/report/report.html
      # - name: artifact conda-logs
      #  uses: actions/upload-artifact@v2
      #  if: always()
      #  with:
      #    name: conda-logs
      #    path: workflow/logs/
  #----------------------------------------------------------------------------#
  pipeline_docker:
    name: Pipeline with Docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    timeout-minutes: 60
    steps:
      #------------------------------------------------------------------------#
      - name: setup environment variables
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=${{ secrets.DOCKERHUB_PASSWORD }}" >> $GITHUB_ENV
          echo "FLOWDASH_BIO_USERNAME=${{ secrets.FLOWDASH_BIO_USERNAME }}" >> $GITHUB_ENV
          echo "FLOWDASH_BIO_PASSWORD=${{ secrets.FLOWDASH_BIO_PASSWORD }}" >> $GITHUB_ENV
      #------------------------------------------------------------------------#
      # Checkout Repository
      - name: checkout repo
        uses: actions/checkout@v2
      # Clean results
      - name: clean results
        run: |
          rm -rf results/iqtree/ results/metadata results/multiqc;
      #------------------------------------------------------------------------#
      # pull docker image
      - name: docker pull
        run: docker pull ktmeaton/plague-phylogeography:dev
      #------------------------------------------------------------------------#
      # Clean Old Results
      - name: clean results
        shell: bash -l {0}
        run: workflow/scripts/clean_results.sh results yes
      # run help
      - name: run help
        run: docker run -v $PWD:/pipeline -e FLOWDASH_BIO_USERNAME=$FLOWDASH_BIO_USERNAME -e FLOWDASH_BIO_PASSWORD=$FLOWDASH_BIO_PASSWORD -w /pipeline ktmeaton/plague-phylogeography:dev snakemake --profile profiles/gh-actions help;
      # run all
      - name: run all
        shell: bash -l {0}
        run: docker run -v $PWD:/pipeline -e FLOWDASH_BIO_USERNAME=$FLOWDASH_BIO_USERNAME -e FLOWDASH_BIO_PASSWORD=$FLOWDASH_BIO_PASSWORD -w /pipeline ktmeaton/plague-phylogeography:dev snakemake --profile profiles/gh-actions all;
      # run report
      - name: run report
        shell: bash -l {0}
        run: docker run -v $PWD:/pipeline -e FLOWDASH_BIO_USERNAME=$FLOWDASH_BIO_USERNAME -e FLOWDASH_BIO_PASSWORD=$FLOWDASH_BIO_PASSWORD -w /pipeline ktmeaton/plague-phylogeography:dev snakemake --profile profiles/gh-actions --report workflow/report/report.html all;
      #------------------------------------------------------------------------#
      #  Artifact Upload
      - name: artifact docker-report
        uses: actions/upload-artifact@v2
        with:
          name: docker-report
          path: workflow/report/report.html
      # - name: artifact docker-logs
      #  uses: actions/upload-artifact@v2
      #  if: always()
      #  with:
      #    name: docker-logs
      #    path: workflow/logs/
