#------------------------------------------------------------------------------#
name: Pipeline Assembly
#------------------------------------------------------------------------------#
# Global workflow environment variables
env:
    PHYLO_CONDA_ENV: "plague-phylogeography-0.1.4dev"
    CONDA_ENVS_PATH: "/home/runner/miniconda/envs:/usr/share/miniconda/envs"
    CONDA_PKGS_DIRS: "/home/runner/miniconda/pkgs"
    GH_RESOURCES:    "--max_memory 6.GB --max_cpus 2"
#------------------------------------------------------------------------------#
# Workflow conditions
on:
  push:
    branches:
      - 'master'
    paths:
      - '.github/workflows/pipeline_assembly.yaml'
      - 'main.nf'
      - 'nextflow.config'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]
#------------------------------------------------------------------------------#
jobs:
  #----------------------------------------------------------------------------#
  # Assembled Genome Test
  assembly:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      #------------------------------------------------------------------------#
      # Install nextflow
      - name: install nextflow
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/
      #------------------------------------------------------------------------#
      # download nextflow pipelines
      - name: download plague-phylogeography
        shell: bash -l {0}
        run: |
          nextflow pull ${GITHUB_REPOSITORY}
          nextflow pull ${GITHUB_REPOSITORY} -r ${GITHUB_SHA}
          # Move env files into github workspace for hashing
          cp ~/.nextflow/assets/${GITHUB_REPOSITORY}/environment.yaml \
            ./plague-phylogeography.yaml
      #------------------------------------------------------------------------#
      #  Restore (cache) conda environments
      - name: setup conda
        uses: goanpeca/setup-miniconda@v1

      - name: restore plague-phylogeography cache
        uses: actions/cache@v2
        id: plague-phylogeography-env-cache-restore
        with:
          path: |
            /home/runner/miniconda/envs/plague-phylogeography-0.1.4dev
          key: plague-phylogeography-env-cache-${{ runner.os }}-test2-${{ hashFiles('./plague-phylogeography.yaml') }}
      #------------------------------------------------------------------------#
      # Check conda environments
      - name: check cache
        run: conda info --envs
      #  Fail workflows if cache not restored
      - name: fail plague-phylogeography cache
        if:  steps.plague-phylogeography-env-cache-restore.outputs.cache-hit != 'true'
        run: |
          echo "plague-phylogeography cache failed to load."
          exit 1
      #------------------------------------------------------------------------#
      #  Test Pipeline - Small
      - name: pipeline small
        if:  steps.plague-phylogeography-env-cache-restore.outputs.cache-hit == 'true'
        shell: bash -l {0}
        run: |
          conda activate ${PHYLO_CONDA_ENV}
          nextflow run -r ${GITHUB_SHA} ${GITHUB_REPOSITORY} \
            --max_datasets_assembly 2 \
            --skip_sra_download \
            --skip_eager \
            --skip_outgroup_download \
            --outdir shortTest \
            ${GH_RESOURCES}
          conda deactivate
      #  Test Pipeline - Long
      - name: pipeline large
        if:  steps.plague-phylogeography-env-cache-restore.outputs.cache-hit == 'true'
        shell: bash -l {0}
        run: |
          conda activate ${PHYLO_CONDA_ENV}
          nextflow run -r ${GITHUB_SHA} ${GITHUB_REPOSITORY} \
            --max_datasets_assembly 2 \
            --skip_sra_download \
            --skip_eager \
            --skip_outgroup_download \
            --iqtree_branch_support \
            #--iqtree_runs 10 \
            --outdir test \
            -resume \
            ${GH_RESOURCES}
          conda deactivate
      #------------------------------------------------------------------------#
      #  Artifact Upload
      - name: artifact sqlite-import
        uses: actions/upload-artifact@v2
        with:
          name: sqlite-import
          path: test/sqlite_import/

      - name: artifact snippy-pairwise
        uses: actions/upload-artifact@v2
        with:
          name: snippy-pairwise
          path: test/snippy_pairwise/output10X/

      - name: artifact iqtree
        uses: actions/upload-artifact@v2
        with:
          name: iqtree
          path: test/iqtree/

      - name: artifact multiqc
        uses: actions/upload-artifact@v2
        with:
          name: multiqc
          path: test/multiqc/multiqc_report.html

      - name: artifact trace
        uses: actions/upload-artifact@v2
        with:
          name: trace
          path: test/trace/
